#!/usr/bin/perl
# Adapted from the code by Pierre Mavro and Vivien Didelot.
# Changed to add symbols to charging/discharging states and changed colours to
# match the Tomorrow Night Eighties Color Scheme.
# Added a low battery notification.

use strict;
use warnings;
use utf8;

my $acpi;
my $status;
my $percent;
my $output;

# Read the first line of the "acpi" command output
open (ACPI, 'acpi -b |') or die "Can't exec acpi: $!\n";
$acpi = <ACPI>;
close(ACPI);

# Fail on unexpected output:
if ($acpi !~ /: (\w+), (\d+)%/) {
        die "$acpi\n";
}

$status = $1;
$percent = $2;

# Add symbols to the output depending on the status:
if ($status eq 'Discharging') {
        $output .= ' ';
} elsif ($status eq 'Charging') {
        $output .= ' ';
} elsif ($status eq 'Full') {
        $output .= ' ';
} elsif ($status eq 'Unknown') {
        $output .= ' ';
}

# Add the percentage battery remaining:
$output .= "$percent%";

# Uncomment to add time remaining in parentheses:
#if ($acpi =~ /(\d\d:\d\d):/) {
#        $output .= " ($1)";
#}

print "$output\n";
print "$output\n";

# Change color at different percentage levels when discharging:
if ($status eq 'Discharging') {
        if ($percent < 20) {
                print "#F2777A\n";
                system("notify-send -t 10000 -i ~/.i3/low-battery.png 'Ceallraí Íseal'")
        } elsif ($percent < 40) {
                print "#F99157\n";
        } elsif ($percent < 60) {
                print "#FFCC66\n";
        } elsif ($percent < 85) {
                print "#99CC99\n";
        }
        if ($percent < 5) {
                exit(33);
        }
}
exit(0);
